[tool.poetry]
name = "svglab"
version = "0.1.1"
description = "A manipulation and optimization library for Scalable Vector Graphics"
authors = ["Tomáš Režňák <tomas.reznak@volny.cz>"]
license = "MIT"
readme = "README.md"
classifiers = [
  "Framework :: Pydantic :: 2",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Multimedia :: Graphics :: Editors :: Vector-Based",
  "Topic :: Multimedia :: Graphics",
  "Topic :: Scientific/Engineering :: Image Processing",
  "Topic :: Text Processing :: Markup :: XML",
  "Typing :: Typed",
]

[tool.poetry.urls]
"Homepage" = "https://github.com/reznakt/svglab"
"Issues" = "https://github.com/reznakt/svglab/issues"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.10"
beautifulsoup4 = "^4.12.3"
lxml = "^5.3.0"
bidict = "^0.23.1"
html5lib = "^1.1"
pydantic = "^2.10.4"
pydantic-extra-types = "^2.10.1"
lark = "^1.2.2"
readable-number = "^0.1.3"
svgpathtools = "^1.6.1"
pyright = "^1.1.391"
useful-types = "^0.2.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.4"
poethepoet = "^0.32.0"
pytest = "^8.3.4"
pre-commit = "^4.0.1"
types-beautifulsoup4 = "^4.12.0.20241020"
hypothesis = "^6.123.2"
pytest-cov = "^6.0.0"
vermin = "^1.6.0"
pytest-clarity = "^1.0.1"
pytest-accept = "^0.1.12"
pytest-sugar = "^1.0.0"
pytest-randomly = "^3.16.0"

[tool.poetry.scripts]
svglab = "svglab.__main__:main"

[tool.poe.tasks]
lint = "ruff check"
lint-fix = "ruff check --fix"
format = "ruff format --diff"
format-fix = "ruff format"
test = "pytest"
typecheck = "pyright --warnings"
start = "poetry run svglab"
versioncheck = "vermin ."

[tool.pytest.ini_options]
addopts = ["--cov", "--doctest-continue-on-failure", "--doctest-modules"]
filterwarnings = [
  # https://bugs.launchpad.net/beautifulsoup/+bug/2076897
  "ignore:The 'strip_cdata' option of HTMLParser\\(\\) has never done anything and will eventually be removed.",
]

[tool.pyright]
deprecateTypingAliases = false        # covered by Ruff + shows false positives
enableReachabilityAnalysis = true
pythonPlatform = "All"
pythonVersion = "3.10"
reportInvalidTypeVarUse = true
reportMissingImports = true
reportMissingTypeArgument = true
reportMissingTypeStubs = false
reportPrivateUsage = true
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUntypedFunctionDecorator = true
reportUnusedImport = true
strictDictionaryInference = true
strictListInference = true
strictSetInference = true
typeCheckingMode = "strict"

[tool.ruff]
target-version = "py310"
show-fixes = true
line-length = 75         # formatter

[tool.ruff.lint]
select = ["ALL"]
fixable = ["ALL"]
ignore = [
  # conflicts
  "D211",   # No blank lines allowed before class docstring
  "D213",   # Multi-line docstring summary should start at the second line
  "COM812", # Missing trailing comma in a tuple
  "D203",   # 1 blank line required before class docstring
  "ISC001", # Use of `is` with a literal

  # missing docstrings
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  "D106", # Missing docstring in public nested class
  "D107", # Missing docstring in __init__

  # exceptions
  "TRY003", # Avoid specifying long messages outside the exception class
  "EM101",  # Exception must not use a string literal

  # `TODO`s
  "FIX002", # Line contains TODO
  "TD002",  # Missing author in TODO
  "TD003",  # Missing issue link on the line following this TODO

  # misc
  "S101",  # Use of assert detected
  "TC001", # Move application import into a type-checking block
  "TC002", # Move third-party import into a type-checking block
  "TC003", # Move standard library import into a type-checking block
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*" = [
  "PLR200",  # Magic value used in comparison
  "PLR0913", # Too many arguments in function definition
]

[tool.ruff.lint.pycodestyle]
max-line-length = 79 # linter

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
lines-after-imports = 2
split-on-trailing-comma = false

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"abc.ABC".msg = "Use `metaclass=abc.ABCMeta` instead"

[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = true
