[tool.poetry]
name = "svglab"
version = "0.1.0"
description = "A manipulation and optimization library for Scalable Vector Graphics"
authors = ["Tomáš Režňák <tomas.reznak@volny.cz>"]
license = "MIT"
readme = "README.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.10"
beautifulsoup4 = "^4.12.3"
lxml = "^5.3.0"
bidict = "^0.23.1"
html5lib = "^1.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.0"
poethepoet = "^0.31.0"
pytest = "^8.3.3"
mypy = "^1.13.0"
pre-commit = "^4.0.1"
types-beautifulsoup4 = "^4.12.0.20241020"
hypothesis = "^6.121.0"
pytest-cov = "^6.0.0"
vermin = "^1.6.0"

[tool.poetry.scripts]
svglab = "svglab.__main__:main"

[tool.poe.tasks]
lint = "ruff check"
lint-fix = "ruff check --fix"
format = "ruff format --diff"
format-fix = "ruff format"
test = "pytest"
typecheck = "mypy"
start = "poetry run svglab"
versioncheck = "vermin ."

[tool.pytest.ini_options]
addopts = ["--cov", "--doctest-continue-on-failure", "--doctest-modules"]

[tool.mypy]
disallow_any_explicit = true
pretty = true
python_version = "3.10"
show_column_numbers = true
show_error_context = true
strict = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
packages = ["svglab", "tests"]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
fixable = ["ALL"]
ignore = [
  # conflicts
  "D211",   # No blank lines allowed before class docstring
  "D213",   # Multi-line docstring summary should start at the second line
  "COM812", # Missing trailing comma in a tuple
  "D203",   # 1 blank line required before class docstring
  "ISC001", # Use of `is` with a literal

  # missing docstrings
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  "D106", # Missing docstring in public nested class
  "D107", # Missing docstring in __init__

  # exceptions
  "TRY003", # Avoid specifying long messages outside the exception class
  "EM101",  # Exception must not use a string literal

  # `TODO`s
  "FIX002", # Line contains TODO
  "TD002",  # Missing author in TODO
  "TD003",  # Missing issue link on the line following this TODO
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*" = [
  "S101",   # Use of assert detected
  "PLR200", # Magic value used in comparison
]

[tool.ruff.format]
docstring-code-format = true
